一、网络
1. socket简介
	socket(简称 套接字) 是进程间通信的一种方式，它与其他进程间通信的一个主要不同是：
		它能实现不同主机间的进程间通信，我们网络上各种各样的服务大多都是基于 Socket 来完成通信的
		例如我们每天浏览网页、QQ 聊天、收发 email 等等
2. 创建socket
	在 Python 中 使用socket 模块的函数 socket 就可以完成：

		import socket
		socket.socket(AddressFamily, Type)
		说明：
			函数 socket.socket 创建一个 socket，该函数带有两个参数：

	Address Family：可以选择 AF_INET（用于 Internet 进程间通信） 或者 AF_UNIX（用于同一台机器进程间通信）,实际工作中常用AF_INET
	Type：套接字类型，可以是 SOCK_STREAM（流式套接字，主要用于 TCP 协议）或者 SOCK_DGRAM（数据报套接字，主要用于 UDP 协议）
	
	1)创建一个tcp socket（tcp套接字）
		import socket
		# 创建tcp的套接字
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		# ...这里是使用套接字的功能（省略）...
		# 不用的时候，关闭套接字
		s.close()
	
	2)创建一个udp socket（udp套接字）
		import socket
		# 创建udp的套接字
		s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
		# ...这里是使用套接字的功能（省略）...
		# 不用的时候，关闭套接字
		s.close()
	备注：
		1)套接字使用流程 与 文件的使用流程很类似
		2)创建套接字
		3)使用套接字收/发数据
		4)关闭套接字

2.1 udp网络程序-发送、接收数据
2.1.1. udp网络程序-发送数据
	创建一个基于udp的网络程序流程很简单，具体步骤如下：
		1)创建客户端套接字
		2)发送/接收数据
		3)关闭套接字
	代码如下：
	#coding=utf-8
	from socket import *

	# 1. 创建udp套接字
	udp_socket = socket(AF_INET, SOCK_DGRAM)

	# 2. 准备接收方的地址
	# '192.168.1.103'表示目的ip地址
	# 8080表示目的端口
	dest_addr = ('192.168.1.103', 8080)  # 注意 是元组，ip是字符串，端口是数字

	# 3. 从键盘获取数据
	send_data = input("请输入要发送的数据:")

	# 4. 发送数据到指定的电脑上的指定程序中
	udp_socket.sendto(send_data.encode('utf-8'), dest_addr)

	# 5. 关闭套接字
	udp_socket.close()

2.1.2 udp网络程序-发送、接收数据
	#coding=utf-8

	from socket import *

	# 1. 创建udp套接字
	udp_socket = socket(AF_INET, SOCK_DGRAM)

	# 2. 准备接收方的地址
	dest_addr = ('192.168.236.129', 8080)

	# 3. 从键盘获取数据
	send_data = input("请输入要发送的数据:")

	# 4. 发送数据到指定的电脑上
	udp_socket.sendto(send_data.encode('utf-8'), dest_addr)

	# 5. 等待接收对方发送的数据
	recv_data = udp_socket.recvfrom(1024)  # 1024表示本次接收的最大字节数

	# 6. 显示对方发送的数据
	# 接收到的数据recv_data是一个元组
	# 第1个元素是对方发送的数据
	# 第2个元素是对方的ip和端口
	print(recv_data[0].decode('gbk'))
	print(recv_data[1])

	# 7. 关闭套接字
	udp_socket.close()

2.2 python3中的编码与解码
	1)str->bytes:encode编码
	2)bytes->str:decode解码
	字符串通过编码成为字节码，字节码通过解码成为字符串。
	其中decode()与encode()方法可以接受参数，其声明分别为:
		bytes.decode(encoding="utf-8", errors="strict")
		str.encode(encoding="utf-8", errors="strict")
		其中的encoding是指在解码编码过程中使用的编码(此处指“编码方案”是名词)，errors是指错误的处理方案。
		
